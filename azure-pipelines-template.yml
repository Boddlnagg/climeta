jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stable:
        rustup_toolchain: stable-${{ parameters.target }}
      ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
        beta:
          rustup_toolchain: beta-${{ parameters.target }}
        nightly:
          rustup_toolchain: nightly-${{ parameters.target }}
  steps:
  - ${{ if not(startsWith(parameters.name, 'Windows')) }}:
    # Linux and macOS
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        export PATH="$HOME/.cargo/bin:$PATH"
        echo "##vso[task.setvariable variable=PATH;]$PATH"
      displayName: Install Rust
  - ${{ if startsWith(parameters.name, 'Windows') }}:
    # Windows
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: Install Rust (Windows)
  # All platforms
  - script: |
        rustc -Vv
        cargo -V
    displayName: Query installed versions
  # Use bash for cross-platform env variable syntax
  - bash: cargo build --verbose
    displayName: Build
  - bash: cargo test --verbose
    displayName: Run tests
  - ${{ if startsWith(parameters.name, 'Windows') }}:
    # Example "winrt" only works on Windows
    - bash: cargo run --example winrt
      displayName: Run example program
